---
apiVersion: k8s.amaiz.com/v1alpha1
kind: Redis
metadata:
  # the .metadata.labels will be added to all generated resources along with the
  # redis=example label
  labels:
    lol: woot
  # the name of the Redis resource will be used as a label for all generated resources,
  # and as the infix or suffix for them.
  name: example
spec:
  # required field. Minimum value is 3
  replicas: 3

  # config is a set of key-value pairs needed for configuring Redis instances. (optional)
  # keys and values should be string values
  # More info: https://redis.io/topics/config
  # config will appear as a ConfigMap and will be mounted to every Redis instance.
  # Note that the following keywords will be ignored:
  # include, bind, protected-mode, port, daemonize, dir, replica-announce-ip,
  # replica-announce-port, replicaof, masterauth, requirepass, rename-command
  config:
    repl-ping-replica-period: "10"

  # Password allows to refer to a Secret containing password for Redis. (optional)
  # Password should be strong enough. Passwords shorter than 8 characters
  # composed of ASCII alphanumeric symbols will lead to a mild warning logged by the Operator.
  # Please note that password hashes are added as annotations to Pods to enable
  # password rotation. Hashes are generated using argon2id KDF.
  # Changing the password in the referenced Secret will not trigger
  # the rolling Statefulset upgrade automatically.
  # However an event in regard to any objects owned by the Redis resource
  # fired afterwards will trigger the rolling upgrade.
  # Redis operator does not store the password internally and reads it
  # from the Secret any time the Reconcile is called.
  # Hence it will not be able to connect to Pods with the ``old'' password.
  # In scenarios when persistence is turned off all the data will be lost
  # during password rotation.
  password:
    # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#secretkeyselector-v1-core
    secretKeyRef:
      key: password
      name: redis-password-secret

  # affinity, annotations, securityContext, nodeSelector tolerations and priorityClassName (all optional)
  # are added to the resulting StatefulSet's PodTemplate.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#podspec-v1-core
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: lol
              operator: In
              values:
              - woot
          topologyKey: kubernetes.io/hostname
        weight: 70
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    seccomp.security.alpha.kubernetes.io/pod: runtime/default

  # dataVolumeClaimTemplate allows to define a persistent volume template for Redis. (optional)
  # If omitted, emptyDir will be used.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#persistentvolumeclaim-v1-core
#  dataVolumeClaimTemplate:
#    metadata:
#      name: redis-data
#    spec:
#      storageClassName: standard
#      accessModes:
#      - ReadWriteOnce
#      resources:
#        requests:
#          storage: 1Gi

  # Redis container definition (required)
  # image, resources and securityContext are the same as found in v1.Container.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.14/#container-v1-core
  redis:
    image: redis:5-alpine
    initialDelaySeconds: 10
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - all
      readOnlyRootFilesystem: true
      runAsUser: 7777777
      runAsGroup: 7777777
      fsGroup: 7777777
      runAsNonRoot: true

  # Redis exporter container definition (optional)
  exporter:
    image: oliver006/redis_exporter:v1.2.1
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - all
      readOnlyRootFilesystem: true
      runAsUser: 7777777
      runAsGroup: 7777777
      fsGroup: 7777777
      runAsNonRoot: true

  # To disable THP
  volumes:
  - name: sys
    hostPath:
      path: /sys
  initContainers:
  - name: disable-thp
    image: busybox
    command: ["sh", "-c"]
    args:
    - |-
      set -e
      set -o pipefail

      echo never > /rootfs/sys/kernel/mm/transparent_hugepage/enabled

      grep -q -F [never] /sys/kernel/mm/transparent_hugepage/enabled
    volumeMounts:
    - name: sys
      mountPath: /rootfs/sys
      type: Directory
